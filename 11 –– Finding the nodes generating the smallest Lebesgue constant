% Iban Sadowski


%lebesgue = @(x) abs(lj{2}(x)) + abs(lj{3}(x)) + abs(lj{4}(x)) + abs(lj{5}(x)) + abs(lj{6}(x));
as = linspace(0, 1, 50); bs = linspace(0, 1, 50);
outvals = zeros(length(as), length(bs));

for i = 2:length(as)    
    for ii = 1:length(bs)
        if as(i) < bs(ii)
            nodes = [-bs(ii), -as(i), 0, as(i), bs(ii)];    
            lj = lagrange(nodes);
            lebesgue = @(x) abs(lj{1}(x)) + abs(lj{2}(x)) + abs(lj{3}(x)) + abs(lj{4}(x)) + abs(lj{5}(x));
            outvals(i, ii) = max(lebesgue(linspace(0, 1, 1000)));
        end
    end
end
contourf(as, bs, outvals)
title('Contour Plot for 5 Node Lebesgue - Iban Sadowski')
contourcbar

%fplot(lebesgue, [nodes(2) nodes(6)])
            
function [polys] = lagrange (xs)
    
    polys = cell(1, length(xs)); % creates an empty cell, whose entries will be function handles 
    
    for i = 1:length(xs)
        polys{i} = @(x) 1;
        for j = 1:length(xs)
            if i ~= j
                polys{i} = @(x)polys{i}(x).* (x - xs(j))/(xs(i) - xs(j));
            end
        end
    end
end
